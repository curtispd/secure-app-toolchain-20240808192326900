---
version: "3"
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: "![](toolchain.svg?localize)"
  icon: secure-lock-kubernetes.svg
  required:
    - build
    - repo
    - tekton-catalog-repo
    - tekton-gitsecure
  $configuration:
     ENABLE_EXTENSIONS: true
     ENABLE_IF_ELSE: true
  info:
    git url: >
      "[" + $env.repository + "]" +
        "(" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "]" +
        "(" + $env.repository +
          "/tree/" + $env.branch + ")"
    hosted_region: ""
  wizard:
    $ref: wizard.yml
toolchain:
  name: "secure-app-toolchain-{{timestamp}}"
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  sm-vault:
    service_id: secretsmanager
    parameters:
      name: >
        $env.smName ? '{{smName}}' : 'sm-compliance-secrets'
      region: >
        $env.smRegion ? '{{smRegion}}' : ''
      resource-group: >
        $env.smResourceGroup ? '{{smResourceGroup}}' : ''
      instance-name: >
        $env.smInstanceName ? '{{smInstanceName}}' : ''
  repo:
    service_id: >
      if ( $env.ENABLE_SETUP_WIZARD === 'true' ) {
        'hostedgit';
      } else {
        $env.source_provider ? $env.source_provider : 'hostedgit';
      }
    parameters:
      repo_name: "hello-containers-{{timestamp}}"
      repo_url: >
        $env.type === 'link' ? 
          $env.app_repo : $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/hello-containers':
          'https://github.com/open-toolchain/hello-containers'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ?
          $env.app_repo : $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/hello-containers':
          'https://github.com/open-toolchain/hello-containers'
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: true
      legal: true
      source_provider: 'hostedgit'
  pipeline-repo:
    service_id: >
      if ( $env.ENABLE_SETUP_WIZARD === 'true' ) {
        'hostedgit';
      } else {
        $env.source_provider ? $env.source_provider : 'hostedgit';
      }
    parameters:
      repo_name: "secure-app-toolchain-{{timestamp}}"
      repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/secure-app-toolchain"
        } else {
          "https://github.ibm.com/open-toolchain/secure-app-toolchain"
        }
      source_repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/secure-app-toolchain"
        } else {
          "https://github.ibm.com/open-toolchain/secure-app-toolchain"
        }
      type: $env.type || 'clone'
      has_issues: false
      enable_traceability: false
      legal: true
      kind: ['pipeline']
      source_provider: 'hostedgit'
  inventory-repo:
    service_id: >
      if ( $env.ENABLE_SETUP_WIZARD === 'true' ) {
        'hostedgit';
      } else {
        $env.inv_source_provider ? $env.inv_source_provider : 'hostedgit';
      } 
    parameters:
      repo_name: 'inventory-{{timestamp}}'
      type: $env.type || 'clone'
      repo_url: >
        $env.inventory_repo ? $env.inventory_repo : $env.inventoryRepo ? '{{inventoryRepo}}' : 
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/inventory':
        'https://github.com/open-toolchain/inventory'
      source_repo_url: >
        $env.inventory_repo ? $env.inventory_repo : $env.inventoryRepo ? '{{inventoryRepo}}' : 
        $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/inventory':
        'https://github.com/open-toolchain/inventory'
      has_issues: false
      enable_traceability: false
      legal: true
      source_provider: 'hostedgit'
  tekton-catalog-repo:
    service_id: >
      if ( $env.ENABLE_SETUP_WIZARD === 'true' ) {
        'hostedgit';
      } else {
        $env.source_provider ? $env.source_provider : 'hostedgit';
      }
    parameters:
      repo_name: 'tekton-catalog-{{timestamp}}'
      repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/tekton-catalog"
        } else {
          "https://github.com/open-toolchain/tekton-catalog"
        }
      source_repo_url: >
        if ( $env.template.info.hosted_region !== "" ) {
          "https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/tekton-catalog"
        } else {
          "https://github.com/open-toolchain/tekton-catalog"
        }
      type: 'clone'
      has_issues: false
      enable_traceability: false
      kind: ['pipeline']
      source_provider: 'hostedgit'
  pr:
    service_id: pipeline
    parameters:
      services:
        - repo
        - tekton-catalog-repo
        - devops-insights
      name: 'pr-pipeline'
      type: tekton
      ui-pipeline: true
      configuration:
        content:
          $text: "pr_pipeline_tekton.yml"
        env:
          PIPELINE_REPO: pipeline-repo
          APP_REPO: repo
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          INSIGHTS: devops-insights
          APP_NAME: "{{form.pipeline.parameters.app-name}}"
          ARTIFACTORY_DOCKER_CONFIG_JSON: '{{form.artifactoryComp.parameters.docker_config_json}}'
          PRIVATE_WORKER: '{{services.privateWorker.parameters.name}}'
          PIPELINE_REPO_BRANCH: >
            $env.branch ? $env.branch : 
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          REGISTRY_REGION_ID: "{{form.pipeline.parameters.registry-region}}"
          REGISTRY_NAMESPACE: "{{form.pipeline.parameters.registry-namespace}}"
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.ENABLE_SETUP_WIZARD === 'true' ) {
              'gitlab-pr-listener';
            } else {
              if ( $env.source_provider === 'githubconsolidated' ) {
                'github-pr-listener';
              } else if ( $env.source_provider === 'gitlab' ) {
                'gitlab-pr-listener';
              } else if ( $env.source_provider === 'bitbucketgit' ) {
                'bitbucket-commit';
              } else if ( $env.source_provider === 'github_integrated' ) {
                'github-ent-pr-listener';
              } else {
                'gitlab-pr-listener';
              }
            }
          COMMONS_HOSTED_REGION: >
            $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/commons/-/raw/main':
            'https://raw.githubusercontent.com/open-toolchain/commons/master'
          DEFINITIONS_BRANCH: >
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          APP_REPO_BRANCH: >
            $env.template.info.hosted_region !== "" ? 'main': 'master'
        execute: false
  build:
    service_id: pipeline
    parameters:
      services:
        - repo
        - inventory-repo
        - devops-insights
      name: 'ci-pipeline'
      ui-pipeline: true
      type: tekton
      configuration:
        content:
          $text: "build_pipeline_tekton.yml"
        env:
          APP_REPO: repo
          APP_NAME: "{{form.pipeline.parameters.app-name}}"
          INSIGHTS: devops-insights
          REGISTRY_REGION_ID: "{{form.pipeline.parameters.registry-region}}"
          REGISTRY_NAMESPACE: "{{form.pipeline.parameters.registry-namespace}}"
          API_KEY: "{{form.pipeline.parameters.api-key}}"
          PROD_REGION_ID: "{{form.pipeline.parameters.prod-region}}"
          PROD_RESOURCE_GROUP: "{{form.pipeline.parameters.prod-resource-group}}"
          PROD_CLUSTER_NAME: "{{form.pipeline.parameters.prod-cluster-name}}"
          PROD_CLUSTER_NAMESPACE: "{{form.pipeline.parameters.prod-cluster-namespace}}"             
          PIPELINE_REPO: pipeline-repo
          INVENTORY_REPO: inventory-repo
          PIPELINE_REPO_BRANCH: >
            $env.branch ? $env.branch : 
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.ENABLE_SETUP_WIZARD === 'true') {
              'grit-or-gitlab-commit';
            } else {
              if ( $env.source_provider === 'githubconsolidated' ) {
                'github-commit';
              } else if ( $env.source_provider === 'gitlab' ) {
                'grit-or-gitlab-commit';
              } else if ( $env.source_provider === 'bitbucketgit' ) {
                'bitbucket-commit';
              } else if ( $env.source_provider === 'github_integrated' ) {
                'github-ent-commit';
              } else {
                'grit-or-gitlab-commit';
              }
            }
          COMMONS_HOSTED_REGION: >
            $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/commons/-/raw/main':
            'https://raw.githubusercontent.com/open-toolchain/commons/master'
          DEFINITIONS_BRANCH: >
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          APP_REPO_BRANCH: >
            $env.template.info.hosted_region !== "" ? 'main': 'master'
        execute: false
  deploy:
    service_id: pipeline
    parameters:
      services:
        - repo
        - inventory-repo
        - devops-insights
      name: 'cd-pipeline'
      ui-pipeline: true
      type: tekton
      configuration:
        content:
          $text: "deploy_rolling_kubernetes_pipeline_tekton.yml"
        env:
          APP_REPO: repo
          APP_NAME: "{{form.pipeline.parameters.app-name}}"
          REGISTRY_REGION_ID: "{{form.pipeline.parameters.registry-region}}"
          REGISTRY_NAMESPACE: "{{form.pipeline.parameters.registry-namespace}}"
          API_KEY: "{{form.pipeline.parameters.api-key}}"
          INSIGHTS: devops-insights
          PROD_REGION_ID: "{{form.pipeline.parameters.prod-region}}"
          PROD_RESOURCE_GROUP: "{{form.pipeline.parameters.prod-resource-group}}"
          PROD_CLUSTER_NAME: "{{form.pipeline.parameters.prod-cluster-name}}"
          PROD_CLUSTER_NAMESPACE: "{{form.pipeline.parameters.prod-cluster-namespace}}"
          PIPELINE_REPO: pipeline-repo
          DEPLOYMENT_STRATEGY: "{{form.deployment_strategy.parameters.deploymentStrategy}}"
          PIPELINE_REPO_BRANCH: >
            $env.branch ? $env.branch : 
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          INVENTORY_REPO: inventory-repo
          TEKTON_CATALOG_REPO: tekton-catalog-repo
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.ENABLE_SETUP_WIZARD === 'true') {
              'grit-or-gitlab-commit';
            } else {
              if ( $env.source_provider === 'githubconsolidated' ) {
                'github-commit';
              } else if ( $env.source_provider === 'gitlab' ) {
                'grit-or-gitlab-commit';
              } else if ( $env.source_provider === 'bitbucketgit' ) {
                'bitbucket-commit';
              } else if ( $env.source_provider === 'github_integrated' ) {
                'github-ent-commit';
              } else {
                'grit-or-gitlab-commit';
              }
            }
          COMMONS_HOSTED_REGION: >
            $env.template.info.hosted_region !== "" ? 'https://{{template.info.hosted_region}}.git.cloud.ibm.com/open-toolchain/commons/-/raw/main':
            'https://raw.githubusercontent.com/open-toolchain/commons/master'
          DEFINITIONS_BRANCH: >
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          APP_REPO_BRANCH: >
            $env.template.info.hosted_region !== "" ? 'main': 'master'
          INVENTORY_BRANCH: 'master'  
        execute: false
  devops-insights:
    service_id: 'draservicebroker'


form:
  pipeline:
    parameters:
      app-name: >
        $env.appName ?
          '{{appName}}' : '{{services.repo.parameters.repo_name}}'
      prod-cluster-namespace: >
        $env.prodClusterNamespace ?
          '{{prodClusterNamespace}}' : 'prod'
      registry-region: '{{registryRegion}}'
      registry-namespace: '{{registryNamespace}}'
      api-key: '{{apiKey}}'
      prod-region: '{{prodRegion}}'
      prod-resource-group: '{{prodResourceGroup}}'
      prod-cluster-name: '{{prodClusterName}}'
    schema:
      $ref: deploy_rolling.json

  pipeline_blue_green:
    parameters:
      app-name: >
        $env.appName ?
          '{{appName}}' : '{{services.repo.parameters.repo_name}}'
      prod-cluster-namespace: >
        $env.prodClusterNamespace ?
          '{{prodClusterNamespace}}' : 'prod'
      registry-region: '{{registryRegion}}'
      registry-namespace: '{{registryNamespace}}'
      api-key: '{{apiKey}}'
      prod-region: '{{prodRegion}}'
      prod-resource-group: '{{prodResourceGroup}}'
      prod-cluster-name: '{{prodClusterName}}'
    schema:
      $ref: deploy_blue_green.json 

  pipeline_canary:
    parameters:
      app-name: >
        $env.appName ?
          '{{appName}}' : '{{services.repo.parameters.repo_name}}'
      prod-cluster-namespace: >
        $env.prodClusterNamespace ?
          '{{prodClusterNamespace}}' : 'prod'
      registry-region: '{{registryRegion}}'
      registry-namespace: '{{registryNamespace}}'
      api-key: '{{apiKey}}'
      prod-region: '{{prodRegion}}'
      prod-resource-group: '{{prodResourceGroup}}'
      prod-cluster-name: '{{prodClusterName}}'
      canary-step-size: '{{canaryStepSize}}'
      canary-step-interval: '{{canaryStepInterval}}'
    schema:
      $ref: deploy_canary.json

  pipeline_satellite:
    parameters:
      app-name: >
        $env.appName ?
          '{{appName}}' : '{{services.repo.parameters.repo_name}}'
      registry-region: '{{registryRegion}}'
      registry-namespace: '{{registryNamespace}}'
      api-key: '{{apiKey}}'
      satellite-cluster-group: '{{satelliteClusterGroup}}'
      satellite-cluster-group-namespace: '{{satelliteClusterGroupNamespace}}'
    schema:
      $ref: deploy_rolling_satellite.json

  wizard_inventory:
    schema:
      $ref: wizard_inventory.json

  deployment_strategy:
    parameters:
      deploymentStrategy:  >
        $env.deploymentStrategy ?
          '{{deploymentStrategy}}' : 'rolling' 
    schema:
      $ref: wizard_strategy.json

      

  
