---
apiVersion: tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: trigger-template-secure-kube
spec:
  params:
    - name: repository
      description: The git repo
    - name: branch
      description: the branch for the git repo
      default: "master"
    - name: revision
      description: the git revision/commit for the git repo
      default: ""
    - name: git-token
      description: access token for the git repo
      default: ""
    - name: app-name
      description: application name
    - name: fail-on-lint-errors
      description: force failure of task when docker lint errors are found
      default: "true"
    - name: custom-image-registry-dockerconfigjson
      description: |
        dockerconfigjson for custom images used in pipeline tasks.
        See https://cloud.ibm.com/docs/devsecops?topic=devsecops-troubleshoot-devsecops#troubleshoot-pipe-abort-early
      default: "eyJhdXRocyI6e319" # ie. {"auths":{}} base64 encoded
    - name: build-script
      description: The command(s) to run the build in run-build step. It will override the default commands
      default: ""
    - name: registry-region
      description: The IBM Cloud region for image registry
    - name: registry-namespace
      description: container registry namespace
    - name: image-name
      description: image name
    - name: path-to-context
      default: "."
    - name: path-to-dockerfile
      default: "."
    - name: dockerfile
      default: "Dockerfile"
    - name: fail-on-scanned-issues
      description: force failure of task when vulnerability advisor scan issues are found
      default: "false"
    - name: pipeline-debug
      default: "0"
    - name: inventoryRepo
      description: The variable storing git integration for the repository storing build inventory with the toolchain
    - name: insights
      description: The variable storing DevOps Insight integration with the toolchain
    - name: toolchain-build-image
      description: Image to use for `build` task
      default: "icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.46"
    - name: tester-tests-image
      description: Image to use for `unit-test` task
      default: "icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.46"
  resourcetemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: secure-app-$(uid)-pvc
      spec:
        resources:
          requests:
            storage: 5Gi
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
    - apiVersion: v1
      kind: Secret
      data:
        .dockerconfigjson: $(params.custom-image-registry-dockerconfigjson)
      metadata:
        name: custom-image-registry-pull-secret
      type: kubernetes.io/dockerconfigjson
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        name: secure-app-$(uid)
      spec:
        pipelineRef:
          name: secure-app-pipeline
        params:
          - name: repository
            value: $(params.repository)
          - name: branch
            value: $(params.branch)
          - name: revision
            value: $(params.revision)
          - name: git-token
            value: $(params.git-token)
          - name: app-name
            value: $(params.app-name)
          - name: fail-on-lint-errors
            value: $(params.fail-on-lint-errors)
          - name: registry-region
            value: $(params.registry-region)
          - name: registry-namespace
            value: $(params.registry-namespace)
          - name: image-name
            value: $(params.image-name)
          - name: path-to-context
            value: $(params.path-to-context)
          - name: path-to-dockerfile
            value: $(params.path-to-dockerfile)
          - name: dockerfile
            value: $(params.dockerfile)
          - name: fail-on-scanned-issues
            value: $(params.fail-on-scanned-issues)
          - name: pipeline-debug
            value: $(params.pipeline-debug)
          - name: inventoryRepo
            value: $(params.inventoryRepo) 
          - name: insights
            value: $(params.insights)
          - name: toolchain-build-image
            value: $(params.toolchain-build-image)
          - name: build-script
            value: $(params.build-script)
          - name: tester-tests-image
            value: $(params.tester-tests-image)
        workspaces:
          - name: pipeline-ws
            persistentVolumeClaim:
              claimName: secure-app-$(uid)-pvc
        podTemplate:
          imagePullSecrets:
            - name: custom-image-registry-pull-secret
---
apiVersion: tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: trigger-binding-manual
spec:
  params:
---
apiVersion: tekton.dev/v1beta1
kind: EventListener
metadata:
  name: manual-run
spec:
  triggers:
    - binding:
        name: trigger-binding-manual
      template:
        name: trigger-template-secure-kube
---
apiVersion: tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: github-ent-commit
spec:
  params:
    - name: branch
      value: $(event.ref)
    - name: commit-id
      value: $(event.after)
    - name: commit-timestamp
      value: $(event.repository.pushed_at)
    - name: repository
      value: $(event.repository.html_url)
    - name: scm-type
      value: "github-ent"
---        
apiVersion: tekton.dev/v1beta1
kind: EventListener
metadata:
  name: github-ent-commit
spec:
  triggers:
    - bindings: 
        - name: github-ent-commit   
      template:
        name: trigger-template-secure-kube
---
apiVersion: tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: github-commit
spec:
  params:
    - name: branch
      value: $(event.ref)
    - name: commit-id
      value: $(event.after)
    - name: commit-timestamp
      value: $(event.repository.updated_at)
    - name: repository
      value: $(event.repository.html_url)
    - name: scm-type
      value: "github"
---
apiVersion: tekton.dev/v1beta1
kind: EventListener
metadata:
  name: github-commit
spec:
  triggers:
    - bindings:  
        - name: github-commit   
      template:
        name: trigger-template-secure-kube
---
apiVersion: tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: grit-or-gitlab-commit
spec:
  params:
    - name: branch
      value: $(event.ref)
    - name: commit-id
      value: $(event.checkout_sha)
    - name: commit-timestamp
      value: $(event.commits[0].timestamp)
    - name: repository
      value: $(event.project.http_url)
    - name: scm-type
      value: "gitlab"
---
apiVersion: tekton.dev/v1beta1
kind: EventListener
metadata:
  name: grit-or-gitlab-commit
spec:
  triggers:
    - bindings:   
        - name: grit-or-gitlab-commit
      template:
        name: trigger-template-secure-kube
---
apiVersion: tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: bitbucket-commit
spec:
  params:
    - name: repository
      value: "$(event.repository.links.html.href)"
    - name: revision
      value: "$(event.push.changes[0].new.target.hash)"
    - name: branch
      value: "$(event.push.changes[0].new.name)"
    - name: commit-timestamp
      value: "$(event.pull_request.head.repo.pushed_at)"
    - name: commit-id
      value: "$(event.pull_request.head.sha)"
    - name: scm-type
      value: "bitbucket"
---
apiVersion: tekton.dev/v1beta1
kind: EventListener
metadata:
  name: bitbucket-commit
spec:
  triggers:
    - binding:
        name: bitbucket-commit
      template:
        name: trigger-template-secure-kube
