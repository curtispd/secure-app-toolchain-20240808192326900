---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: secure-app-pipeline
spec:
  params:
    - name: api
      description: The IBM Cloud API Endpoint
      default: "https://cloud.ibm.com"    
    - name: apikey
      description: The IBM Cloud API Key
    - name: repository
      description: the git repo containing source code. If empty, the repository url will be found from toolchain
      default: ""
    - name: branch
      description: the branch for the git repo
      default: "master"
    - name: revision
      description: the git revision/commit for the git repo
      default: ""
    - name: app-name
      description: application name
    - name: deployment-file
      description: file containing the kubernetes deployment definition
      default: "deployment.yml"
    - name: keep-ingress-custom-domain
      description: force keep of ingress custom domain in deployment-file if any (true|false)
      default: "false"
    - name: dev-region
    - name: dev-resource-group
    - name: cluster-name
      description: the name of the cluster to target
    - name: dev-cluster-namespace
      description: the namespace
    - name: pipeline-debug
      default: "0"
    - name: pr-url
      description: pr url
    - name: commit-timestamp
    - name: scm-type
    - name: project-id
      default: ""
    - name: registry-create-namespace
      description: create container registry namespace if it doesn't already exists
      default: "true"
    - name: inventoryRepo
      description: The variable storing git integration for the repository storing build inventory with the toolchain
    - name: deployment-strategy
      description: kubernetes deployment-strategy 
    - name: canary-step-interval
      description: Defines duration of each test performed against canary deployment
    - name: canary-step-size
      description: Defines number of tests should be performed against canary deployment
    - name: commons-hosted-region
      default: "https://raw.githubusercontent.com/open-toolchain/commons/master"
    - name: insights
      description: The variable storing DevOps Insight integration with the toolchain
  workspaces:
    - name: pipeline-ws
  tasks:
    - name: git-clone
      taskRef:
        name: git-clone-repo
      params:
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "toolchain-apikey"
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.branch)
        - name: revision
          value: $(params.revision)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: git-clone-inventory-repo
      taskRef:
        name: git-clone-repo
      runAfter: [git-clone]
      params:
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "apikey"
        - name: repository
          value: $(params.inventoryRepo)
        - name: branch
          value: "master"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: git-credentials-json-file
          value: credentials.json
      workspaces:
        - name: output
          workspace: pipeline-ws
          subpath: inventory-repo 
    - name: download-artifacts
      taskRef:
        name: download-artifacts
      runAfter: 
        - git-clone-inventory-repo 
      params:
        - name: api
          value: $(params.api)
        - name: apikey
          value: "toolchain-apikey"
        - name: shuttle-properties-file
          value: "build.properties"
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: canary-deployment
      taskRef:
        name: iks-deploy-to-kubernetes
      runAfter: [download-artifacts]
      params:
        - name: shuttle-properties-file
          value: "build.properties"
        - name: cluster-region
          value: $(params.dev-region)
        - name: resource-group
          value: $(params.dev-resource-group)
        - name: cluster-name
          value: $(params.cluster-name)
        - name: setup-script
          value: |
            export CLUSTER_NAMESPACE="$(params.dev-cluster-namespace)"
            export DEPLOYMENT_FILE="$(params.deployment-file)"
            export KEEP_INGRESS_CUSTOM_DOMAIN="$(params.keep-ingress-custom-domain)"
            # pipeline build number is the doi build record id (if any)
            export SOURCE_BUILD_NUMBER=$BUILD_NUMBER
            echo "SOURCE_BUILD_NUMBER=$BUILD_NUMBER" >> build.properties
            # For doi plugin invocation if needed
            export TOOLCHAIN_ID=$PIPELINE_TOOLCHAIN_ID
        - name: script
          value: |
            DEPLOYMENT_STRATEGY="$(params.deployment-strategy)"
            source ./build.properties
            echo " DEPLOYMENT_STRATEGY :- ${DEPLOYMENT_STRATEGY}"
            echo "Peforming canary deployment"
            source <(curl -sSL "$(params.commons-hosted-region)/scripts/deployment_strategies/canary/kube/prepare_deployment_file.sh")
            source <(curl -sSL "$(params.commons-hosted-region)/scripts/deployment_strategies/canary/kube/create_deployment_files.sh")
            source <(curl -sSL "$(params.commons-hosted-region)/scripts/deployment_strategies/canary/kube/perform_deployment.sh")
        - name: post-execution-script
          value: |
            # Keep APP_URL in build.properties shuttle file
            echo "APP_URL=$APP_URL" >> build.properties
            IMAGE="${REGISTRY_URL}/${REGISTRY_NAMESPACE}/${IMAGE_NAME}@${IMAGE_MANIFEST_SHA}"
            echo "IMAGE=${IMAGE}" >> build.properties
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
    - name: canary-test
      taskRef:
        name: iks-deploy-to-kubernetes
      runAfter: [canary-deployment]
      params:
        - name: shuttle-properties-file
          value: "build.properties"
        - name: cluster-region
          value: $(params.dev-region)
        - name: resource-group
          value: $(params.dev-resource-group)
        - name: cluster-name
          value: $(params.cluster-name)
        - name: setup-script
          value: |
            export CLUSTER_NAMESPACE="$(params.dev-cluster-namespace)"
            export DEPLOYMENT_FILE="$(params.deployment-file)"
            export KEEP_INGRESS_CUSTOM_DOMAIN="$(params.keep-ingress-custom-domain)"
            # pipeline build number is the doi build record id (if any)
            export SOURCE_BUILD_NUMBER=$BUILD_NUMBER
            echo "SOURCE_BUILD_NUMBER=$BUILD_NUMBER" >> build.properties
            # For doi plugin invocation if needed
            export TOOLCHAIN_ID=$PIPELINE_TOOLCHAIN_ID
            export CLUSTER_NAMESPACE="$(params.dev-cluster-namespace)"
        - name: script
          value: |
            DEPLOYMENT_STRATEGY="$(params.deployment-strategy)"
            export STEP_INTERVAL="$(params.canary-step-interval)"
            export STEP_SIZE="$(params.canary-step-size)"
            source ./build.properties
            sleep 10
            echo " DEPLOYMENT_STRATEGY :- ${DEPLOYMENT_STRATEGY}"
            echo "Peforming canary Testing"
            source <(curl -sSL "$(params.commons-hosted-region)/scripts/deployment_strategies/canary/kube/canary_test.sh")
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
    - name: release
      taskRef:
        name: iks-deploy-to-kubernetes
      runAfter: [canary-test]
      params:
        - name: shuttle-properties-file
          value: "build.properties"
        - name: cluster-region
          value: $(params.dev-region)
        - name: resource-group
          value: $(params.dev-resource-group)
        - name: cluster-name
          value: $(params.cluster-name)
        - name: setup-script
          value: |
            export CLUSTER_NAMESPACE="$(params.dev-cluster-namespace)"
            export DEPLOYMENT_FILE="$(params.deployment-file)"
            export KEEP_INGRESS_CUSTOM_DOMAIN="$(params.keep-ingress-custom-domain)"
            # pipeline build number is the doi build record id (if any)
            export SOURCE_BUILD_NUMBER=$BUILD_NUMBER
            echo "SOURCE_BUILD_NUMBER=$BUILD_NUMBER" >> build.properties
            # For doi plugin invocation if needed
            export TOOLCHAIN_ID=$PIPELINE_TOOLCHAIN_ID
        - name: script
          value: |
            DEPLOYMENT_STRATEGY="$(params.deployment-strategy)"
            source ./build.properties
            echo " DEPLOYMENT_STRATEGY :- ${DEPLOYMENT_STRATEGY}"
            echo "Peforming production release"
            source ./pipeline.data
            source <(curl -sSL "$(params.commons-hosted-region)/scripts/deployment_strategies/canary/kube/prod_deployment.sh")
            echo ""
            echo "=========================================================="
            echo "DEPLOYMENT SUCCEEDED"
            APP_URL=""
            APP_URL=$(kubectl get ing | grep ${INGRESS_NAME} | awk {'print $3'})
            export APP_URL   # using 'export', the env var gets passed to next job in stage
            echo -e "VIEW THE APPLICATION AT: ${APP_URL}"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
    - name: publish-doi-deployrecord
      taskRef:
        name: publish-doi-deployrecord
      runAfter: [release]
      when:
        - input: $(params.insights)
          operator: in
          values: ["draservicebroker"]
      params:
        - name: api
          value: $(params.api)
        - name: apikey
          value: $(params.apikey)
        - name: appname
          value: $(params.app-name)
        - name: inventoryrepo
          value: $(params.inventoryRepo)
        - name: target
          value: 'prod'
        - name: build_number
          value: $(tasks.download-artifacts.results.build_number)
      workspaces:
        - name: output
          workspace: pipeline-ws
  finally:
    - name: check-if-roll-back-required
      taskRef:
        name: iks-deploy-to-kubernetes
      params:
        - name: shuttle-properties-file
          value: "build.properties"
        - name: cluster-region
          value: $(params.dev-region)
        - name: resource-group
          value: $(params.dev-resource-group)
        - name: cluster-name
          value: $(params.cluster-name)
        - name: setup-script
          value: |
            export CLUSTER_NAMESPACE="$(params.dev-cluster-namespace)"
            export DEPLOYMENT_FILE="$(params.deployment-file)"
            export KEEP_INGRESS_CUSTOM_DOMAIN="$(params.keep-ingress-custom-domain)"
            # pipeline build number is the doi build record id (if any)
            export SOURCE_BUILD_NUMBER=$BUILD_NUMBER
            echo "SOURCE_BUILD_NUMBER=$BUILD_NUMBER" >> build.properties
            # For doi plugin invocation if needed
            export TOOLCHAIN_ID=$PIPELINE_TOOLCHAIN_ID
        - name: script
          value: |
            source ./build.properties
            echo "params.canaryTestStatus is $(tasks.canary-test.status)"
            if [ $(tasks.canary-test.status) == "Failed"  ]; then
            echo "Peforming canary rollback"
            source <(curl -sSL "$(params.commons-hosted-region)/scripts/deployment_strategies/canary/kube/rollback_deployment.sh")
            else
            echo "Canary test passed. Roll-back not required."
            fi           
        - name: post-execution-script
          value: |
            # Keep APP_URL in build.properties shuttle file
            IMAGE="${REGISTRY_URL}/${REGISTRY_NAMESPACE}/${IMAGE_NAME}@${IMAGE_MANIFEST_SHA}"
            echo "IMAGE=${IMAGE}" >> build.properties
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: abort-app-pipeline
spec:
  params:
    - name: api
      description: The IBM Cloud API Endpoint
      default: "https://cloud.ibm.com"    
    - name: apikey
      description: The IBM Cloud API Key
    - name: repository
      description: the git repo containing source code. If empty, the repository url will be found from toolchain
      default: ""
    - name: branch
      description: the branch for the git repo
      default: "master"
    - name: revision
      description: the git revision/commit for the git repo
      default: ""
    - name: app-name
      description: application name
    - name: deployment-file
      description: file containing the kubernetes deployment definition
      default: "deployment.yml"
    - name: keep-ingress-custom-domain
      description: force keep of ingress custom domain in deployment-file if any (true|false)
      default: "false"
    - name: dev-region
    - name: dev-resource-group
    - name: cluster-name
      description: the name of the cluster to target
    - name: dev-cluster-namespace
      description: the namespace
    - name: pipeline-debug
      default: "0"
    - name: pr-url
      description: pr url
    - name: commit-timestamp
    - name: scm-type
    - name: project-id
      default: ""
    - name: registry-create-namespace
      description: create container registry namespace if it doesn't already exists
      default: "true"
    - name: inventoryRepo
      description: The variable storing git integration for the repository storing build inventory with the toolchain
    - name: deployment-strategy
      description: kubernetes deployment-strategy 
    - name: canary-step-interval
      description: Defines duration of each test performed against canary deployment
    - name: canary-step-size
      description: Defines number of tests should be performed against canary deployment
    - name: commons-hosted-region
      default: "https://raw.githubusercontent.com/open-toolchain/commons/master"
  workspaces:
    - name: pipeline-ws
  tasks:
    - name: git-clone
      taskRef:
        name: git-clone-repo
      params:
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "toolchain-apikey"
        - name: repository
          value: $(params.repository)
        - name: branch
          value: $(params.branch)
        - name: revision
          value: $(params.revision)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: git-clone-inventory-repo
      taskRef:
        name: git-clone-repo
      runAfter: [git-clone]
      params:
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "apikey"
        - name: repository
          value: $(params.inventoryRepo)
        - name: branch
          value: "master"
        - name: pipeline-debug
          value: $(params.pipeline-debug)
        - name: git-credentials-json-file
          value: credentials.json
      workspaces:
        - name: output
          workspace: pipeline-ws
          subpath: inventory-repo 
    - name: download-artifacts
      taskRef:
        name: download-artifacts
      runAfter: 
        - git-clone-inventory-repo 
      params:
        - name: api
          value: $(params.api)
        - name: apikey
          value: "toolchain-apikey"
        - name: shuttle-properties-file
          value: "build.properties"
      workspaces:
        - name: output
          workspace: pipeline-ws
    - name: canary-abort
      taskRef:
        name: iks-deploy-to-kubernetes
      runAfter: [download-artifacts]
      params:
        - name: shuttle-properties-file
          value: "build.properties"
        - name: cluster-region
          value: $(params.dev-region)
        - name: resource-group
          value: $(params.dev-resource-group)
        - name: cluster-name
          value: $(params.cluster-name)
        - name: setup-script
          value: |
            export CLUSTER_NAMESPACE="$(params.dev-cluster-namespace)"
            export DEPLOYMENT_FILE="$(params.deployment-file)"
            export KEEP_INGRESS_CUSTOM_DOMAIN="$(params.keep-ingress-custom-domain)"
            # pipeline build number is the doi build record id (if any)
            export SOURCE_BUILD_NUMBER=$BUILD_NUMBER
            echo "SOURCE_BUILD_NUMBER=$BUILD_NUMBER" >> build.properties
            # For doi plugin invocation if needed
            export TOOLCHAIN_ID=$PIPELINE_TOOLCHAIN_ID
        - name: script
          value: |
            DEPLOYMENT_STRATEGY="$(params.deployment-strategy)"
            export STEP_INTERVAL="$(params.canary-step-interval)"
            export STEP_SIZE="$(params.canary-step-size)"
            source ./build.properties
            echo " STEP_INTERVAL :- ${STEP_INTERVAL}"
            echo " STEP_SIZE :- ${STEP_SIZE}"
            echo "Peforming canary deployment"
            source <(curl -sSL "$(params.commons-hosted-region)/scripts/deployment_strategies/canary/kube/prepare_deployment_file.sh")
            source <(curl -sSL "$(params.commons-hosted-region)/scripts/deployment_strategies/canary/kube/create_deployment_files.sh")
            source <(curl -sSL "$(params.commons-hosted-region)/scripts/deployment_strategies/canary/kube/stop_deployment.sh")
        - name: post-execution-script
          value: |
            # Keep APP_URL in build.properties shuttle file
            echo "APP_URL=$APP_URL" >> build.properties
            IMAGE="${REGISTRY_URL}/${REGISTRY_NAMESPACE}/${IMAGE_NAME}@${IMAGE_MANIFEST_SHA}"
            echo "IMAGE=${IMAGE}" >> build.properties
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: artifacts
          workspace: pipeline-ws
    